/*
First time? Check out the tutorial game:
https://sprig.hackclub.com/gallery/getting_started

@title: ai
@author: 
@tags: []
@addedOn: 2024-00-00
*/
let reuse
const space = "-"
const cursor = "^"
const helpingverbs = [
  "does","do","can", "would", "should", "shouldn't", "wouldn't"
]
const answers = [
  "baguett",
  "blahaj",
  "a simulation",
  "a scam",
  "a conspiracy",
  "the sum of one plus one"
]
let msg = ""


setLegend(
  [cursor, bitmap`
................
....0...........
...030..........
...030..........
...030..........
...0330.0.0.....
...030303030....
...033333330....
...033333330....
.00333333330....
.0C333333330....
.00C33333330....
..00C3333330....
....0CCCC30.....
.....00000......
................` ],
  [ "a", bitmap`
0000000000000000
0222222222222220
0222222222222220
0222222222222220
0222000000222220
0222022220222220
0222022220222220
0222000000222220
0222022220222220
0222022220222220
0222022220222220
0222022220222220
0222222222222220
0222222222222220
0222222222222220
0000000000000000`],
  [ "b", bitmap`
0000000000000000
0222222222222220
0222222222222220
0220000022222220
0220222022222220
0220222022222220
0220222022222220
0220000222222220
0220002222222220
0220220222222220
0220222022222220
0220222022222220
0220000022222220
0222222222222220
0222222222222220
0000000000000000`],
  [ "c", bitmap`
0000000000000000
0222222222222220
0222200000222220
0222022222022220
0220222222222220
0220222222222220
0220222222222220
0220222222222220
0220222222222220
0220222222222220
0220222222222220
0220222222222220
0222022222222220
0222200000222220
0222222222222220
0000000000000000`],
  [ "d", bitmap`
0000000000000000
0222222222222220
0222222222222220
0222222222222220
0222000000022220
0222022222002220
0222022222202220
0222022222202220
0222022222202220
0222022222202220
0222022222202220
0222022222002220
0222000000022220
0222222222222220
0222222222222220
0000000000000000`],
  [ "e", bitmap`
0000000000000000
0222222222222220
0222222222222220
0220000000222220
0220222222222220
0220222222222220
0220222222222220
0220000000222220
0220222222222220
0220222222222220
0220222222222220
0220222222222220
0220000000222220
0222222222222220
0222222222222220
0000000000000000`],
  [ "f", bitmap`
0000000000000000
0222222222222220
0222222222222220
0220000000222220
0220222222222220
0220222222222220
0220000000222220
0220222222222220
0220222222222220
0220222222222220
0220222222222220
0220222222222220
0220222222222220
0222222222222220
0222222222222220
0000000000000000`],
  [ "g", bitmap`
0000000000000000
0222222222222220
0222000000022220
0220022222222220
0200222222222220
0202222222222220
0202222222222220
0202222222222220
0202222222222220
0202222000002220
0202222222202220
0200222222202220
0220022222202220
0222000000022220
0222222222222220
0000000000000000`],
  [ "h", bitmap`
0000000000000000
0222222222222220
0220222222022220
0220222222022220
0220222222022220
0220222222022220
0220222222022220
0220222222022220
0220000000022220
0220222222022220
0220222222022220
0220222222022220
0220222222022220
0220222222022220
0222222222222220
0000000000000000`],
  [ "i", bitmap`
0000000000000000
0222222222222220
0222222222222220
0200000000002220
0222222002222220
0222222002222220
0222222002222220
0222222002222220
0222222002222220
0222222002222220
0222222002222220
0222222002222220
0222222002222220
0200000000000220
0222222222222220
0000000000000000`],
  [ "j", bitmap`
0000000000000000
0222222222222220
0222222222222220
0220000000002220
0222222002222220
0222222002222220
0222222002222220
0222222002222220
0222222002222220
0222222002222220
0222222002222220
0222222002222220
0222022002222220
0222200222222220
0222222222222220
0000000000000000`],
  [ "k", bitmap`
0000000000000000
0222222222222220
0222222222222220
0220222202222220
0220222022222220
0220200222222220
0220022222222220
0220222222222220
0220022222222220
0220202222222220
0220220222222220
0220222022222220
0220222202222220
0222222222222220
0222222222222220
0000000000000000`],
  [ "l", bitmap`
0000000000000000
0222222222222220
0222200222222220
0222022022222220
0222022222222220
0222022222222220
0222022222222220
0222022222222220
0222022222222220
0222022222222220
0222022222222220
0220002222222220
0202020222222220
0220222000000220
0222222222222220
0000000000000000`],
  [ "m", bitmap`
0000000000000000
0222222222222220
0222222222222220
0222000200022220
0220222022202220
0220222022202220
0220222022202220
0220222022202220
0220222022202220
0220222022202220
0220222022202220
0220222022202220
0220222022202220
0222222222222220
0222222222222220
0000000000000000`],
  [ "n", bitmap`
0000000000000000
0222222222222220
0222222222022220
0220222222022220
0220022222022220
0220202222022220
0220220222022220
0220220222022220
0220222022022220
0220222202022220
0220222220022220
0220222222022220
0220222222222220
0222222222222220
0222222222222220
0000000000000000`],
  [ "p", bitmap`
0000000000000000
0222222222222220
0222222222222220
0222000000222220
0222022220222220
0222022220222220
0222022220222220
0222000000222220
0222022222222220
0222022222222220
0222022222222220
0222022222222220
0222022222222220
0222022222222220
0222222222222220
0000000000000000`],
  [ "q", bitmap`
0000000000000000
0222222222222220
0222222222222220
0222000000022220
0220022222002220
0200222222200220
0202222222220220
0202222222220220
0202222222220220
0202222222220220
0202222220220220
0200222220000220
0220022222000220
0222000000020020
0222222222222220
0000000000000000`],
  [ "r", bitmap`
0000000000000000
0222222222222220
0222222222222220
0222002222222220
0222020022222220
0222022202222220
0222022202222220
0222020022222220
0222202222222220
0222200222222220
0222202002222220
0222202220222220
0222202222022220
0222222222222220
0222222222222220
0000000000000000`],
  [ "s", bitmap`
0000000000000000
0222222222222220
0222222222222220
0222200000002220
0222002222222220
0222002222222220
0222200022222220
0222222000222220
0222222220222220
0222222222002220
0222222222202220
0222222222202220
0220022220002220
0222200002222220
0222222222222220
0000000000000000`],
  [ "t", bitmap`
0000000000000000
0222222222222220
0222222222222220
0220000000002220
0222222022222220
0222222022222220
0222222022222220
0222222022222220
0222222022222220
0222222022222220
0222222022222220
0222222022222220
0222222022222220
0222222022222220
0222222222222220
0000000000000000`],
  [ "u", bitmap`
0000000000000000
0222222222222220
0222222222220220
0220222222220220
0220222222220220
0220222222220220
0220222222220220
0220222222220220
0220222222220220
0220222222220220
0220222222220220
0220022222200220
0222002220002220
0222200000222220
0222222222222220
0000000000000000`],
  [ "v", bitmap`
0000000000000000
0222222222222220
0222222222222220
0220222222222220
0220022222220020
0222022222220220
0222202222220220
0222202222200220
0222220222022220
0222220222022220
0222222020222220
0222222002222220
0222222222222220
0222222222222220
0222222222222220
0000000000000000`],
  [ "w", bitmap`
0000000000000000
0222222222222220
0222222222222220
0202222222220220
0202222222202220
0202222222202220
0200222222202220
0220222222022220
0220222022022220
0220220022022220
0220020202022220
0222002202022220
0222002220022220
0222222220222220
0222222222222220
0000000000000000`],
  [ "x", bitmap`
0000000000000000
0222222222222220
0222222222222220
0220222222200220
0222022222022220
0222202220022220
0222220202222220
0222222002222220
0222222002222220
0222220200222220
0222202220222220
0222202222022220
0220022222002220
0222222222222220
0222222222222220
0000000000000000`],
  [ "y", bitmap`
0000000000000000
0222222222222220
0222222222222220
0222022222220220
0222022222220220
0222202222202220
0222202222202220
0222220222202220
0222220022022220
0222222000222220
0222222200222220
0222222002222220
0220220222222220
0220000222222220
0222222222222220
0000000000000000`],
  [ "z", bitmap`
0000000000000000
0222222222222220
0220022222222220
0222200000000020
0222222222220020
0222222222202220
0222222222022220
0222222000000220
0222222202222220
0222222202222220
0222220022222220
0222200000002220
0222002222222220
0222022222222220
0222222222222220
0000000000000000`],
  [ "?", bitmap`
0000000000000000
0222222222222220
0222220002222220
0222002220222220
0220222220222220
0220222002222220
0222222022222220
0222222022222220
0222222022222220
0222222022222220
0222222222222220
0222222222222220
0222222222222220
0222222022222220
0222222222222220
0000000000000000`],
    [ "o", bitmap`
0000000000000000
0222222222222220
0222222222222220
0222200000022220
0222022222202220
0220222222220220
0220222222220220
0220222222220220
0220222222220220
0220222222220220
0220222222220220
0222022222202220
0222200000022220
0222222222222220
0222222222222220
0000000000000000`],
    ["-", bitmap`
0000000000000000
0222222222222220
0220222022202220
0202020202020220
0202220202020220
0220220022000220
0222020222020220
0202020222020220
0220220222020220
0222222222222220
0220002220002220
0202222220222220
0202222220002220
0220002220222220
0222222220002220
0000000000000000`],
  ["<", bitmap`
0000000000000000
0222222222222220
0222222222222220
0222222222222220
0222220000000020
0222202222222020
0222022202022020
0220222220222020
0222022202022020
0222202222222020
0222220000000020
0222222222222220
0222222222222220
0222222222222220
0222222222222220
0000000000000000`],
  ["ß", bitmap`
................
....00000000....
...0022222200...
..022222222220..
.00222200001200.
.02220022220120.
.02220220222010.
.02220222222010.
.02220222220110.
.02220222001120.
.02220222011220.
.00220222012200.
..022022201220..
...0002220100...
....00000000....
................`]
)

setSolids([])

let level = 0
const levels = [
  map`
..........
ß.........
..........
..........
^.........
qwertzuiop
asdfghjkl?
.yxcvbnm-<`
]

setMap(levels[level])

setPushables({
  //[]: []
})

onInput("s", () => {
  getFirst(cursor).y += 1
})

onInput("w", () => {
  getFirst(cursor).y -= 1
})

onInput("a", () => {
  getFirst(cursor).x -= 1
})

onInput("d", () => {
  getFirst(cursor).x += 1
})

onInput("k", () => {
  switch (getTile(getFirst(cursor).x,getFirst(cursor).y)[1].type) {
    case "":
      break
    case "<":
      msg = msg.slice(0, -1); 
      break;
    case "?":
      msg = msg + "-?"
      break;
    default:
      msg = msg + getTile(getFirst(cursor).x,getFirst(cursor).y)[1].type
  }
})

onInput("i", () => {
  wrapText(getResponse(msg))
})

onInput("l", () => {
  msg = msg.slice(0, -1); 
})

onInput("j", () => {
  msg = msg + " "
})

afterInput(() => {
  
})

function getResponse(prompty) {
  response = []
  answer = []
  //console.log(prompty)
  prompty = prompty.split("-")
  //if is question
  if (prompty.includes("?")) {
    //because
    if (prompty.includes("why") && prompty[1] !== "do") {
      //assuming why is <blank> <blank>
      response = prompty.slice(2,prompty.length-2)
      //console.log(prompty)
      response.splice(prompty.indexOf("?"),1)
      response.push(prompty[1])
      response.push(prompty.slice(prompty.length-2, prompty.length-1))

      //console.log(prompty)
      response.push("because yes")
      for (i = 0; i < response.length; i++) {
        answer = answer + " " + response[i]
        //console.log(answer)
      } 
      return " "+ answer
    } else if (helpingverbs.includes(prompty[1])) {
      console.log("hai :3c")
      //assuming why <helping verb> <subj> <verb> <d.o.>
      //we want <subj> <IF NOT DO - helping verb> <verb> <d.o.> because <answer>
      response = [prompty[2]]
      if (prompty[1] !== "do") {response.push(prompty[1])}
      response.push(prompty[3])
      response.push()
      return "  " + response
    }


    
    //default
    response = prompty.slice(2,prompty.length+1)
    response.splice(response.indexOf("?"),1)
    response.push("is")
    response.push(answers[Math.floor(Math.random()*answers.length)])
    for (i = 0; i < response.length; i++) {
      answer = answer + " " + response[i]
      //console.log(answer)
      }
    return " "+ answer
  }
  //if is greeting
  if (prompty.includes("hi") || prompty.includes("hello") || prompty.includes("good")) {
    answer = "hello!"
    return "  "+ answer
  }
  for (i = 0; i < prompty.length; i++) {
      answer = answer + " " + prompty[i]
      //console.log("  "+ answer)
  }
  return " "+ '"' + answer + '" :p'
}


wrapText(getResponse("why-do-cats-eat-grass-?"))

function wrapText(text) {
  reuse = ""
  reuse = text.length
  for (i = 0; i < reuse; i++) {
    addText(text.slice((i*18)+2, (i*18)+20), {
      x: 2,
      y: 2+i,
      color: color`0`
    })
  }
}

