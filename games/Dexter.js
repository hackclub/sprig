  /*
  @title: dexter_nightshift
  @description: There's a new murderer! Kill or catch the killer. 
  @author: edits
  @tags: ['stealth', 'puzzle']
  @addedOn: 2025-08-19
  
  Use WASD to move Dexter.
  Avoid cops, collect tools, and take out targets.
  */
  
  // define the sprites in our game
  const dexter = "d";
  const target = "t";
  const cop = "c";
  const tool = "u";
  const wall = "w";
  const exit = "e";
  
  // assign bitmap art to each sprite
  setLegend(
    [ dexter, bitmap`
  ................
  ................
  ......000000....
  ......003003....
  ...0..000000....
  ...00.003003....
  ...00.003003....
  ...00.003333....
  ...00..0........
  ..0000.0........
  ...00..0........
  ...00000000.....
  .......0........
  ......000.......
  ......0.0.......
  ......0.0.......` ],
    [ target, bitmap`
  ................
  ................
  ................
  ................
  ................
  ....000000......
  ....033330......
  ..00000000......
  ....606066......
  ....606066......
  ....66660.......
  ........0.......
  .....0000.......
  .....0000.......
  .....0000.......
  .......00.......` ],
    [ cop, bitmap`
  ................
  ................
  ................
  ................
  ................
  ......5555......
  ......5555......
  ......CCCC......
  ......0660......
  ......6336......
  .......66.......
  .....655556.....
  .....6.55.6.....
  .....6.55.6.....
  .......55.......
  .......55.......` ],
    [ tool, bitmap`
.......33.......
......3333......
.....333233.....
.....033223.....
.....023023.....
.....020020.....
.....020220.....
.....020020.....
.....022020.....
.....020020.....
....00000000....
...0000000000...
.......CC.......
.......CC.......
.......CC.......
.......96.......` ],
    [ wall, bitmap`
0000000000000000
0000000000000000
0000L00000000000
0000L00000000000
00000000000L0000
0000000000000000
000000000000L000
00000L0000000000
0000000LL0000000
0000000000000000
0000000000000000
0000000000000000
0000000000000000
000LL00000L00000
0000000000000000
0000000000000000` ],
    [ exit, bitmap`
  ................
  ...0000000000...
  ...0CCCCCCCC0...
  ...0CCCCCCCC0...
  ...0CCCCCCCC0...
  ...0CCCCCCCC0...
  ...0CCCCCCCC0...
  ...0CCCCCCCC0...
  ...0CCCCC96C0...
  ...0CCCCC99C0...
  ...0CCCCCCCC0...
  ...0CCCCCCCC0...
  ...0CCCCCCCC0...
  ...0CCCCCCCC0...
  ...0CCCCCCCC0...
  ...0CCCCCCCC0...` ]
  );
  
  // create game levels
  let level = 0;
  const levels = [
    map`
  dtw`,
    map`
............
............
............
............
............
............
........w...
........w.u.
.......cw.w.
........wdw.
........wwwt
.......map..`,
    map`
  map`
  ];
  
  // set the map displayed to the current level
  let currentLevel = levels[level];
  setMap(currentLevel);
  
  setSolids([ dexter, wall ]);
  
  // define what Dexter can push (none in this case)
  setPushables({
    [dexter]: []
  });
  
  // movement inputs
  onInput("w", () => getFirst(dexter).y--);
  onInput("s", () => getFirst(dexter).y++);
  onInput("a", () => getFirst(dexter).x--);
  onInput("d", () => getFirst(dexter).x++);
  
  // reset input
  onInput("j", () => {
    currentLevel = levels[level];
    if (currentLevel !== undefined) {
      clearText("");
      setMap(currentLevel);
    }
  });
  
  // after each input
  afterInput(() => {
    const d = getFirst(dexter);
    const tile = getTile(d.x, d.y);
  
    tile.forEach(obj => {
      if (obj.type === tool) {
        clearTile(d.x, d.y);
        addText("Tool found", { y: 0, color: color`3` });
      }
      if (obj.type === target) {
        clearTile(d.x, d.y);
        addText("Target taken", { y: 1, color: color`9` });
      }
      if (obj.type === cop) {
        addText("Caught!", { y: 2, color: color`2` });
      }
      if (obj.type === exit) {
        level++;
        currentLevel = levels[level];
        if (currentLevel !== undefined) {
          setMap(currentLevel);
        } else {
          addText("All done.", { y: 3, color: color`6` });
        }
      }
    });
  });
