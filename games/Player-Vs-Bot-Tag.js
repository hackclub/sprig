const player1 = 'p'; // Black player (runner)
const player2 = 'c'; // White bot (tagger)
const tree = 't'; // Green tree
const boulder = 'b'; // Grey boulder
const ground = 'g'; // Plain white ground

setLegend(
  [player1, bitmap`
................
.......00.......
......0000......
.....000000.....
.....000000.....
......0000......
.......00.......
.......00.......
......0000......
.....000000.....
.....000000.....
......0000......
.......00.......
.......00.......
................
................`],
  [player2, bitmap`
................
.......FF.......
......FFFF......
.....FFFFFF.....
.....FFFFFF.....
......FFFF......
.......FF.......
.......FF.......
......FFFF......
.....FFFFFF.....
.....FFFFFF.....
......FFFF......
.......FF.......
.......FF.......
................
................`],
  [tree, bitmap`
.......3........
......333.......
.....33333......
....3333333.....
.....33333......
.......3........
.......3........
.......3........
.......3........
.......3........
.......3........
.......3........
................
................
................
................`],
  [boulder, bitmap`
.....66666......
...666666666....
..66666666666...
.6666666666666..
.6666666666666..
.6666666666666..
..66666666666...
..66666666666...
...666666666....
.....66666......
................
................
................
................
................
................`],
  [ground, bitmap`
................
................
................
................
................
................
................
................
................
................
................
................
................
................
................
................`]
);

let level = 0;
const levels = [
  map`
......
......
......
.t..t.
.b..b.
p..c..`,
];

setBackground(ground);
setMap(levels[level]);

// Game Variables
let playerWins = 0;
let botWins = 0;
let currentTagger = player2; // White starts as tagger
let isTaggerWaiting = true;
let botSpeed = 1200; // Starts as easy mode
let round = 1; // Track rounds

// Function to increase difficulty each round
function increaseDifficulty() {
  if (round === 2) botSpeed = 800;  // Medium
  if (round === 3) botSpeed = 500;  // Hard
}

// Start Game Function
function startGame() {
  isTaggerWaiting = true;
  setTimeout(() => {
    isTaggerWaiting = false;
    botChase();
  }, 5000);
}

// Player controls (black player)
onInput("w", () => getFirst(player1).y -= 1);
onInput("a", () => getFirst(player1).x -= 1);
onInput("s", () => getFirst(player1).y += 1);
onInput("d", () => getFirst(player1).x += 1);

// Bot AI Movement (only moves after 5 seconds)
function botChase() {
  if (!isTaggerWaiting && currentTagger === player2) {
    let bot = getFirst(player2);
    let player = getFirst(player1);

    if (bot && player) {
      if (player.x > bot.x) bot.x++;
      else if (player.x < bot.x) bot.x--;

      if (player.y > bot.y) bot.y++;
      else if (player.y < bot.y) bot.y--;
    }

    setTimeout(botChase, botSpeed);
  }
}

// Swap roles when tagged
afterInput(() => {
  if (tilesWith(player1, player2).length > 0) {
    clearText();
    addText('TAG!', { x: 5, y: 1, color: color`3` });

    // Update scores
    if (currentTagger === player2) botWins++;
    else playerWins++;

    // Check for game end
    if (round === 3) {
      if (playerWins > botWins) {
        clearText();
        addText("PLAYER WINS!", { x: 3, y: 2, color: color`2` });
      } else {
        clearText();
        addText("BOT WINS!", { x: 3, y: 2, color: color`2` });
      }
      return;
    }

    // Move to next round
    round++;
    increaseDifficulty();
    currentTagger = (currentTagger === player1) ? player2 : player1;
    isTaggerWaiting = true;

    // Reset player positions
    setTimeout(() => {
      setMap(levels[level]);
      startGame();
    }, 2000);
  }
});

// Start the game automatically
startGame();
