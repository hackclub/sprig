/* @title: ma_maze_game
@description: A simple template to help you get started with making a maze game.
@author: Chirawat Ma
@tags: []
@addedOn: 2025-08-09
*/

const player1 = "1";
const player2 = "2";
const player3 = "3";
const player4 = "4";
const player5 = "5";
const player6 = "6";
const player7 = "7";
const player8 = "8";
let player = player1;

setLegend(
  [ player1, bitmap`
................
................
................
................
.......FFFD.....
.....3DFF4FF....
....FF444444F...
...CF444C4C4D...
...FF4444444D...
.DFF44FF4F44FFD.
4F3CF3FCFFFF3FFF
44F4FF443C434F44
....44.F4.F.4...
................
................
................` ],
  [ player2, bitmap`
........F9......
......3FDDFD....
.....DF4444FD...
.....FF44444D...
....DD44C4C4F...
....FF44F4F4F...
....D4444444D...
...FF9444449D...
...DCD94944D3F..
..DFD4D44F93DD..
.D4LDFFDC33DCD..
.C3CCDCC3CCL3C4.
..4444..4.4.44..
................
................
................` ],
  [ player3, bitmap`
................
................
........DFF.....
......F3999D....
.....3D4444DF...
....DD44C4C4D...
....344444443...
...DF444444443..
...C3DFF44F49C..
..DFDF4D4F4DCD..
993944DFCFCFDC9.
9D9C394D9D9D49D9
................
................
................
................` ],
  [ player4, bitmap`
................
................
................
................
.......CDFD.....
.....3DDF4DF....
....FD444444D...
...FF444C4C4D...
...CF4444444D...
.DDF443F4344CDC.
.F3CF3FCFDFD33DF
..4343463C4363D.
....3..F4.F.43..
................
................
................` ],
  [ player5, bitmap`
................
................
................
................
.....DFFF.......
....FF4FFD3.....
...F444444FF....
...D4C4C444FC...
...D4444444FF...
.DFF44F4FF44FFD.
FFF3FFFFCF3FC3F4
44F434C344FF4F44
...4.F.4F.44....
................
................
................` ],
  [ player6, bitmap`
......9F........
....DFDDF3......
...DF4444FD.....
...D44444FF.....
...F4C4C44DD....
...F444444FF....
...D4444444D....
...D9444449FF...
..F3D44949DCD...
..DD39F44D4DFD..
..DCD33CDFFDL4D.
.4C3LCC3CCDCC3C.
..44.4.4..4444..
................
................
................` ],
  [ player7, bitmap`
................
................
.....FFD........
....D9993F......
...FD4444D3.....
...D4C4C44DD....
...344444443....
..344444444FD...
..C94F44FFD3C...
..DCD4F4D4FDFD..
.9CDFCFCFD449399
9D94D9D9D493C9D9
................
................
................
................` ],
  [ player8, bitmap`
................
................
................
................
.....DFDC.......
....FD4FDD3.....
...D444444DF....
...D4C4C444FF...
...D4444444FC...
.CDC4434F344FDD.
FD33DFDFCF3FC3F.
.D3634C3643434..
..34.F.4F..3....
................
................
................` ]
);

setSolids([]);

let level = 0;
const levels = [
  map`
1.........
..........
..........
..........
..........
..........
..........
..........`
];

setMap(levels[level]);

setPushables({}); // Empty for now

onInput("w", () => {
  getFirst(player).y -= 1;
});

onInput("a", () => {
  getFirst(player).x -= 1;
  switch (player) {
  case player1:
      getFirst(player).type = player5;
    player = player5;
    break;
  case player2:
    getFirst(player).type = player6;
    player = player6;
    break;
  case player3:
    getFirst(player).type = player7;
    player = player7;
    break;
  case player4:
    getFirst(player).type = player8;
    player = player8;
    break;
  default:
    break;
}});

onInput("s", () => {
  getFirst(player).y += 1;
});

onInput("d", () => {
  getFirst(player).x += 1;
  switch (player) {
  case player5:
      getFirst(player).type = player1;
    player = player1;
    break;
  case player6:
    getFirst(player).type = player2;
    player = player2;
    break;
  case player7:
    getFirst(player).type = player3;
    player = player3;
    break;
  case player8:
    getFirst(player).type = player4;
    player = player4;
    break;
  default:
    break;
}});

afterInput(() => {
  animatePlayer();
});

// This is so confusing at first
const animatePlayer = () => {
  switch (player) {
    case player1:
      getFirst(player).type = player2;
      player = player2;
      console.log(`switched to player ${player} (d)`);
      break;
    case player2:
      getFirst(player).type = player3;
      player = player3;
      console.log(`switched to player ${player} (d)`);
      break;
    case player3:
      getFirst(player).type = player4;
      player = player4;
      console.log(`switched to player ${player} (d)`);
      break;
    case player4:
      getFirst(player).type = player1;
      player = player1;
      console.log(`switched to player ${player} (d)`);
      break;
    case player5:
      getFirst(player).type = player6;
      player = player6;
      console.log(`switched to player ${player} (a)`);
      break;
    case player6:
      getFirst(player).type = player7;
      player = player7;
      console.log(`switched to player ${player} (a)`);
      break;
    case player7:
      getFirst(player).type = player8;
      player = player8;
      console.log(`switched to player ${player} (a)`);
      break;
    case player8:
      getFirst(player).type = player5;
      player = player5;
      console.log(`switched to player ${player} (a)`);
      break;
  }
};