/*
@title: Cosmic Collector
@author: Maxine Guo
@tags: ['space', 'arcade']
@description: Fly your ship, collect valuable coins, and avoid dangerous asteroids. Moving costs energy, so grab energy boosts when you can!
*/

// === COSMIC COLLECTOR RELOADED ===

const player = "p";
const asteroid = "a";
const coin = "c";
const energy_powerup = "e";
const laser = "l";
const bigMeteor = "m";
const warning = "w";
const star = "s";

// --- SPRITES ---
setLegend(
  [ player, bitmap`
................
.......4........
.......4........
......444.......
......444.......
.....44444......
.....44444......
.....44444......
....4444444.....
...444444444....
..44444444444...
.4444400044444..
......L.L.......
......3.3.......
......9.9.......
......6.6.......`],
  [ asteroid, bitmap`
................
................
................
................
......LLL.......
....L00LLLL.....
....L00L00LL....
...LLLLL00LL....
...LL00LLLLL....
...LL00L0L00....
....LL0LLL0.....
......LLLLL.....
................
................
................
................`],
  [ coin, bitmap`
................
................
................
.....666666.....
....66699666....
...6666996666...
...6666996666...
...6666996666...
...6666996666...
...6666666666...
...6666996666...
....66699666....
.....666666.....
................
................
................`],
  [ energy_powerup, bitmap`
................
.......5........
......555.......
.....55755......
....5577755.....
...557777755....
..55557775555...
.....57775......
.....57775......
.....57775......
.....57775......
.....57775......
.....55555......
................
................
................`],
  [ laser, bitmap`
.......2........
.......2........
.......2........
.......2........
.......2........
................
................
................
................
................
................
................
................
................
................
................`],
  [ star, bitmap`
................
................
................
................
................
................
................
......6.........
......6.........
................
................
................
................
................
................
................`]
);

// === GAME STATE ===
let score = 0;
let energy = 100;
const maxEnergy = 100;
let gameOver = false;
let gameSpeed = 300;
let tickCount = 0;
let megaStrikeCountdown = 150; // 45 seconds @ 300ms interval

setMap(map`
s.s.......s...s.
...........s....
..s.s...........
s.........s...s.
......s.........
s..s.......s....
..s...s...s...s.
s.........s.....
.....s..........
..s.s....s...s..
s........p....s.
..s...s.......s.`);

setSolids([]);

onInput("w", () => movePlayer(0, -1));
onInput("s", () => movePlayer(0, 1));
onInput("a", () => movePlayer(-1, 0));
onInput("d", () => movePlayer(1, 0));

function movePlayer(dx, dy) {
  if (gameOver) return;
  const p = getFirst(player);
  if (p) {
    p.x += dx;
    p.y += dy;
    energy -= 1;
  }
}

function fireLaser() {
  if (gameOver) return;
  const p = getFirst(player);
  if (p) addSprite(p.x, p.y - 1, laser);
}

function dropAndRemoveIfTooLow(list) {
  list.forEach(obj => {
    if (obj.y === 11) obj.remove();
    else obj.y += 1;
  });
}

function endGame() {
  gameOver = true;
  const p = getFirst(player);
  if (p) p.remove();
  addText("GAME OVER", { x: 4, y: 6, color: color`3` });
  addText(`Score: ${score}`, { x: 5, y: 8, color: color`5` });
}

function gameTick() {
  if (gameOver) return;
  tickCount++;

  if (tickCount % 20 === 0 && gameSpeed > 150) {
    gameSpeed -= 10;
    clearInterval(gameLoop);
    gameLoop = setInterval(gameTick, gameSpeed);
  }

  if (Math.random() < 0.15) addSprite(randX(), 0, asteroid);
  if (Math.random() < 0.10) addSprite(randX(), 0, coin);
  if (Math.random() < 0.10) addSprite(randX(), 0, energy_powerup);

  dropAndRemoveIfTooLow(getAll(asteroid));
  dropAndRemoveIfTooLow(getAll(coin));
  dropAndRemoveIfTooLow(getAll(energy_powerup));

  const p = getFirst(player);
  if (p) {
    getAll(coin).forEach(c => {
      if (c.x === p.x && c.y === p.y) {
        c.remove();
        score++;
      }
    });
    getAll(energy_powerup).forEach(e => {
      if (e.x === p.x && e.y === p.y) {
        e.remove();
        energy = Math.min(maxEnergy, energy + 10);
      }
    });
    getAll(asteroid).forEach(a => {
      if (a.x === p.x && a.y === p.y) {
        a.remove();
        endGame();
      }
    });
  }

  energy -= 0.1;
  if (energy <= 0) endGame();

  clearText();
  addText(`Score: ${score}`, { x: 1, y: 1, color: color`6` });
  addText(`Energy: ${Math.floor(energy)}`, { x: 1, y: 2, color: color`L` });
}

function randX() {
  return Math.floor(Math.random() * width());
}

function randY() {
  return Math.floor(Math.random() * height());
}

let gameLoop = setInterval(gameTick, gameSpeed);