//setLegend(bitmaps) want to recreate chrome dino game
const dino = "D"
const ground = "G"
const cactus = "C"
const wall = "W"

setLegend(
  [ dino, bitmap`
................
................
....00000000....
...0666666660...
...0666666660...
...0660666060...
...0666666660...
...0666666660...
...0666000660...
...0666666660...
....0666660.....
.....00000......
.....0...0......
.....0...0......
.....0...0......
................` ],
  [ ground, bitmap`
D44D44444D4D44D4
442C4DDC24442CCD
4CCCCC44CCCCCCCC
CC4CCCCCD4CDC4DC
CDCCCDCCCCC4CCCC
CCCCC4CCCCCCCCCC
CCCCCDCCCCCD4CCC
CCCCCCCCCD4CC4CC
CD4CCCCCCCCCCDCC
CDCCCCCCCCCCCCCC
CCCCCCCDCCCCCCCC
CCCCCCC4CCCCCCCC
CCCD4CCCCCCCCCC4
CCCCCCCCD4CCCCCD
CCCCCCCCCCCCCCCC
CCCCCCCCCCCCCCCC` ],
  [ cactus, bitmap`
................
FFF.............
FFF...FF........
FFF...FF........
FFF..FFFF.......
.FF..FFFF...FF..
.FF..FFFF..FFF..
..FF.FFFF..FFF..
..FF.FFFF..FFF..
...FFFFFF.FFF...
....FFFFFFFFF...
......FFFFFF....
......FFF.......
......FFF.......
......FFF.......
......FFF.......` ],
  [ wall, bitmap`
110101010101010L
LLLLLLLLLLLLLLLL
0111010101010L01
LLLLLLLLLLLLLLLL
01011101010L0101
LLLLLLLLLLLLLLLL
010101110L010101
LLLLLLLLLLLLLLLL
0101010L11010101
LLLLLLLLLLLLLLLL
01010L0101110101
LLLLLLLLLLLLLLLL
010L010101011101
LLLLLLLLLLLLLLLL
0L01010101010111
LLLLLLLLLLLLLLLL` ],
)
const background = "b";

// Map only with the basic setup and the cactus is randomized
const level = map`
W................
W................
W.....W..........
W................
W................
W................
W................
W.....D..........
WGGGGGGGGGGGGGGGG`;
setMap(level);

// Solids 
setSolids([ dino, ground, wall ]);
// Gravity & Jumping
let isJumping = false;
let score = 0;

setInterval(() => {
  let player = getFirst(dino);

  if (!isJumping && player && !tilesWith(ground).some(t => t.x === player.x && t.y === player.y + 1)) {
    player.y += 1; 
  }
}, 100);

onInput("w", () => {
  let player = getFirst(dino);
  // jump
  if (!isJumping) {
    isJumping = true;
    player.y -= 2;
    setTimeout(() => player.y -= 1, 100);
    setTimeout(() => isJumping = false, 500);
  }
});

// cactus random
setInterval(() => {
  let cactusPos = 15;
  addSprite(cactusPos, 7, cactus);
}, 1500);

// cactus and wall so that cactus do not just stack there and eat the sprig
setInterval(() => {
  getAll(cactus).forEach(c => {
    c.x -= 1;
    if (tilesWith(cactus, wall).length > 0) { c.remove(); } // Destroy cactus at wall
  });
}, 200);

//reset and text game over
setInterval(() => {
  let player = getFirst(dino);
  
  if (tilesWith(dino, cactus).length > 0) {
    addText("now jump dino", { x: 5, y: 2, color: color`3` });
    setTimeout(() => restartGame(), 1000);
  }
}, 100);

// Score 
setInterval(() => {
  score += 1;
  clearText();
  addText("Score: " + score, { x: 2, y: 0, color: color`2` });
}, 500);

function restartGame() {
  score = 0;
  clearText();
  setMap(level);
}
// sound effect
const melody = tune`
294.11764705882354: E4-294.11764705882354 + E5^294.11764705882354 + B5/294.11764705882354,
294.11764705882354: F4-294.11764705882354 + E5^294.11764705882354 + C4/294.11764705882354,
294.11764705882354: G4^294.11764705882354 + B5/294.11764705882354,
294.11764705882354: A4^294.11764705882354 + B4^294.11764705882354 + C5^294.11764705882354 + C4/294.11764705882354,
294.11764705882354: E4-294.11764705882354 + E5^294.11764705882354 + B5/294.11764705882354,
294.11764705882354: F4-294.11764705882354 + E5^294.11764705882354 + C4/294.11764705882354,
294.11764705882354: G4^294.11764705882354 + B5/294.11764705882354,
294.11764705882354: A4^294.11764705882354 + B4^294.11764705882354 + C5^294.11764705882354 + C4/294.11764705882354,
294.11764705882354: E4-294.11764705882354 + E5^294.11764705882354 + B5/294.11764705882354,
294.11764705882354: F4-294.11764705882354 + E5^294.11764705882354 + C4/294.11764705882354,
294.11764705882354: G4^294.11764705882354 + B5/294.11764705882354,
294.11764705882354: A4^294.11764705882354 + B4^294.11764705882354 + C5^294.11764705882354 + C4/294.11764705882354,
294.11764705882354: E4-294.11764705882354 + E5^294.11764705882354 + B5/294.11764705882354,
294.11764705882354: F4-294.11764705882354 + E5^294.11764705882354 + C4/294.11764705882354,
294.11764705882354: G4^294.11764705882354 + B5/294.11764705882354,
294.11764705882354: A4^294.11764705882354 + C5^294.11764705882354 + B4^294.11764705882354 + C4/294.11764705882354,
294.11764705882354: E4-294.11764705882354 + E5^294.11764705882354,
294.11764705882354: F4-294.11764705882354 + E5^294.11764705882354,
294.11764705882354: G4^294.11764705882354,
294.11764705882354: A4^294.11764705882354 + B4^294.11764705882354 + C5^294.11764705882354 + C4/294.11764705882354,
294.11764705882354: E4-294.11764705882354 + E5^294.11764705882354,
294.11764705882354: F4-294.11764705882354 + E5^294.11764705882354,
294.11764705882354: G4^294.11764705882354,
294.11764705882354: A4^294.11764705882354 + B4^294.11764705882354 + C5^294.11764705882354 + B5~294.11764705882354,
294.11764705882354: E4-294.11764705882354 + E5^294.11764705882354 + B5~294.11764705882354,
294.11764705882354: F4-294.11764705882354 + E5^294.11764705882354 + B5~294.11764705882354,
294.11764705882354: G4^294.11764705882354,
294.11764705882354: A4^294.11764705882354 + B4^294.11764705882354 + C5^294.11764705882354,
294.11764705882354: E4-294.11764705882354 + E5^294.11764705882354,
294.11764705882354: F4-294.11764705882354 + E5^294.11764705882354 + B5~294.11764705882354,
294.11764705882354: G4^294.11764705882354 + B5~294.11764705882354,
294.11764705882354: A4^294.11764705882354 + B4^294.11764705882354 + C5^294.11764705882354 + B5~294.11764705882354`
const playback = playTune(melody, Infinity)

