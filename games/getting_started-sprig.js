/*
@title: getting_started
@description: "Getting Started" is a tutorial game that guides players through basic game mechanics.
@author: leo, edits
@tags: ['tutorial']
@addedOn: 2022-07-26

Check the tutorial in the bottom right, the run button is in the top right.
Make sure to remix this tutorial if you want to save your progress!
*/

// define the sprites in our game
const player = "p";
const box = "b";
const goal = "g";
const wall = "w";

// assign bitmap art to each sprite
setLegend(
  [ player, bitmap`
................
................
................
.......0........
.....00.000.....
....0.....00....
....0.0.0..0....
....0......0....
....0......0....
....00....0.....
......00000.....
......0...0.....
....000...000...
................
................
................`],
  [ box, bitmap`
................
................
................
...88888888888..
...8....8....8..
...8....8....8..
...8....8....8..
...8....8....8..
...88888888888..
...8....8....8..
...8....8....8..
...8....8....8..
...8....8....8..
...88888888888..
................
................`],
  [ goal, bitmap`
................
................
................
....444444......
...44....44.....
...4......4.....
...4.......4....
...4.......4....
...4.......4....
...44......4....
....4......4....
....44....44....
.....444444.....
................
................
................`],
  [ wall, bitmap`
0000000000000000
0000000000000000
0000000000000000
0000000000000000
0000000000000000
0000000000000000
0000000000000000
0000000000000000
0000000000000000
0000000000000000
0000000000000000
0000000000000000
0000000000000000
0000000000000000
0000000000000000
0000000000000000`]
);

// create game levels
let level = 0; // this tracks the level we are on
const levels = [
  map`
..p.
.b.g
....`,
  map`
p..
.b.
..g`,
  map`
p.wg
.b..
..w.
....`,
  map`
p...
...b
...b
.bbg`,
  map`
...
.p.
...`,
  map`
p.w.
.b.g
....
..bg`
];
// Create a tune:
const melody = tune`
125.52301255230125: F4-125.52301255230125 + E4-125.52301255230125,
125.52301255230125: D5~125.52301255230125 + C5~125.52301255230125 + B4~125.52301255230125 + G4-125.52301255230125 + F4-125.52301255230125,
125.52301255230125: E5^125.52301255230125 + A4-125.52301255230125 + G5/125.52301255230125 + F5/125.52301255230125,
125.52301255230125: E4^125.52301255230125 + E5^125.52301255230125 + B4~125.52301255230125 + B5/125.52301255230125 + A5/125.52301255230125,
125.52301255230125: G5~125.52301255230125 + F5~125.52301255230125 + F4^125.52301255230125 + D5^125.52301255230125 + B4~125.52301255230125,
125.52301255230125: F5~125.52301255230125 + F4^125.52301255230125 + D5^125.52301255230125 + C5^125.52301255230125 + B4~125.52301255230125,
125.52301255230125: F5~125.52301255230125 + G4^125.52301255230125 + F4/125.52301255230125 + G5/125.52301255230125 + A5/125.52301255230125,
125.52301255230125: E5~125.52301255230125 + G4^125.52301255230125 + A4^125.52301255230125 + G5-125.52301255230125 + F4/125.52301255230125,
125.52301255230125: E5~125.52301255230125 + A4^125.52301255230125 + E4/125.52301255230125 + G5-125.52301255230125 + C4~125.52301255230125,
125.52301255230125: E5~125.52301255230125 + D5~125.52301255230125 + C5~125.52301255230125 + E4/125.52301255230125 + F4/125.52301255230125,
125.52301255230125: C5~125.52301255230125 + G4/125.52301255230125 + A5-125.52301255230125 + C4^125.52301255230125 + E4~125.52301255230125,
125.52301255230125: A4/125.52301255230125 + B4/125.52301255230125 + A5-125.52301255230125 + D4^125.52301255230125 + F4~125.52301255230125,
125.52301255230125: D5^125.52301255230125 + B4/125.52301255230125 + C5/125.52301255230125 + A5-125.52301255230125 + B5-125.52301255230125,
125.52301255230125: A4~125.52301255230125 + G4~125.52301255230125 + D5^125.52301255230125 + C5/125.52301255230125 + E4^125.52301255230125,
125.52301255230125: G4~125.52301255230125 + E5^125.52301255230125 + C4/125.52301255230125 + E4^125.52301255230125,
125.52301255230125: G4~125.52301255230125 + E5^125.52301255230125 + E4^125.52301255230125,
125.52301255230125: G4~125.52301255230125 + F4~125.52301255230125 + F5^125.52301255230125,
125.52301255230125: G5^125.52301255230125 + D5-125.52301255230125 + A4/125.52301255230125 + D4/125.52301255230125,
125.52301255230125: A5^125.52301255230125 + D5-125.52301255230125 + B4/125.52301255230125 + D4/125.52301255230125 + F4^125.52301255230125,
125.52301255230125: A5^125.52301255230125 + B5^125.52301255230125 + E5-125.52301255230125 + A4-125.52301255230125 + G4-125.52301255230125,
125.52301255230125: E5-125.52301255230125 + G4-125.52301255230125 + C5/125.52301255230125 + D4/125.52301255230125 + E4/125.52301255230125,
125.52301255230125: E5-125.52301255230125 + F5-125.52301255230125 + G4-125.52301255230125 + E4/125.52301255230125,
125.52301255230125: F5-125.52301255230125 + F4-125.52301255230125 + B4~125.52301255230125,
125.52301255230125: D5^125.52301255230125 + E5^125.52301255230125 + E4-125.52301255230125 + B4~125.52301255230125 + C5~125.52301255230125,
125.52301255230125: E5^125.52301255230125 + F5^125.52301255230125 + B4^125.52301255230125 + E4-125.52301255230125 + D4-125.52301255230125,
125.52301255230125: F5^125.52301255230125 + G5^125.52301255230125 + B4^125.52301255230125 + A4^125.52301255230125 + C5~125.52301255230125,
125.52301255230125: G5^125.52301255230125 + A4^125.52301255230125 + G4^125.52301255230125 + C5/125.52301255230125 + C4/125.52301255230125,
125.52301255230125: E5~125.52301255230125 + G4^125.52301255230125 + B4/125.52301255230125 + D4/125.52301255230125,
125.52301255230125: F4^125.52301255230125,
125.52301255230125: G5-125.52301255230125,
125.52301255230125: B4~125.52301255230125 + G5-125.52301255230125 + G4-125.52301255230125 + F4-125.52301255230125 + E4-125.52301255230125,
125.52301255230125: A5-125.52301255230125`
const KALPmelody = tune`
176.47058823529412: C4~176.47058823529412 + D4~176.47058823529412 + E4~176.47058823529412,
176.47058823529412: D4~176.47058823529412 + B4~176.47058823529412 + A4~176.47058823529412 + G4~176.47058823529412 + F4~176.47058823529412,
176.47058823529412: E4~176.47058823529412 + B4~176.47058823529412 + G4~176.47058823529412 + C5~176.47058823529412,
176.47058823529412: E4~176.47058823529412 + F4~176.47058823529412 + B4~176.47058823529412 + G4~176.47058823529412 + C5~176.47058823529412,
176.47058823529412: F4~176.47058823529412 + E4~176.47058823529412 + B4~176.47058823529412 + G4~176.47058823529412 + C5~176.47058823529412,
176.47058823529412: F4~176.47058823529412 + B4~176.47058823529412 + A4~176.47058823529412 + C5~176.47058823529412 + G4^176.47058823529412,
176.47058823529412: F4~176.47058823529412 + G4^176.47058823529412 + A4~176.47058823529412 + B4~176.47058823529412 + F5^176.47058823529412,
176.47058823529412: G4-176.47058823529412 + F5^176.47058823529412 + C5^176.47058823529412 + B4^176.47058823529412 + G5-176.47058823529412,
176.47058823529412: G4^176.47058823529412 + F5^176.47058823529412 + E5^176.47058823529412 + D5^176.47058823529412 + B4^176.47058823529412,
176.47058823529412: D4^176.47058823529412 + E4^176.47058823529412 + F4^176.47058823529412 + G4^176.47058823529412 + A4^176.47058823529412,
176.47058823529412: B4^176.47058823529412 + C5^176.47058823529412 + G4^176.47058823529412 + E5^176.47058823529412 + G5^176.47058823529412,
176.47058823529412: D5^176.47058823529412 + E5^176.47058823529412 + G4^176.47058823529412 + G5^176.47058823529412 + E4-176.47058823529412,
176.47058823529412: D5^176.47058823529412 + C5^176.47058823529412 + A4^176.47058823529412 + B4^176.47058823529412 + F5^176.47058823529412,
176.47058823529412: C5^176.47058823529412 + G5^176.47058823529412 + F5^176.47058823529412 + E5^176.47058823529412 + D5^176.47058823529412,
176.47058823529412: B4^176.47058823529412 + G5^176.47058823529412 + A4^176.47058823529412 + E5^176.47058823529412 + G4^176.47058823529412,
176.47058823529412: B4^176.47058823529412 + G5^176.47058823529412 + A4^176.47058823529412 + E5^176.47058823529412 + F4^176.47058823529412,
176.47058823529412: B4^176.47058823529412 + A4^176.47058823529412 + G4^176.47058823529412 + F4^176.47058823529412 + G5^176.47058823529412,
176.47058823529412: F4^176.47058823529412 + G5^176.47058823529412 + B4^176.47058823529412 + C5^176.47058823529412 + D4-176.47058823529412,
176.47058823529412: F4^176.47058823529412 + F5^176.47058823529412 + D4-176.47058823529412 + E4/176.47058823529412 + C4/176.47058823529412,
176.47058823529412: G4^176.47058823529412 + E5^176.47058823529412 + F4^176.47058823529412 + A5-176.47058823529412 + E4/176.47058823529412,
176.47058823529412: G4^176.47058823529412 + E5^176.47058823529412 + F4^176.47058823529412 + A5-176.47058823529412 + G5-176.47058823529412,
176.47058823529412: A4^176.47058823529412 + D5^176.47058823529412 + F4^176.47058823529412 + C5^176.47058823529412 + B4^176.47058823529412,
176.47058823529412: A4^176.47058823529412 + B4^176.47058823529412 + C5^176.47058823529412 + D5^176.47058823529412 + F4^176.47058823529412,
176.47058823529412: G4^176.47058823529412 + E5-176.47058823529412 + E4^176.47058823529412 + F5-176.47058823529412 + G5-176.47058823529412,
176.47058823529412: G4^176.47058823529412 + E5^176.47058823529412 + E4^176.47058823529412 + B5-176.47058823529412 + G5-176.47058823529412,
176.47058823529412: G4^176.47058823529412 + D5^176.47058823529412 + E5^176.47058823529412 + E4^176.47058823529412 + G5-176.47058823529412,
176.47058823529412: A4^176.47058823529412 + B4^176.47058823529412 + C5^176.47058823529412 + D5^176.47058823529412 + D4^176.47058823529412,
176.47058823529412: D4^176.47058823529412 + C4^176.47058823529412 + F5-176.47058823529412 + A5-176.47058823529412 + G5-176.47058823529412,
176.47058823529412: F5-176.47058823529412 + E5-176.47058823529412 + A5-176.47058823529412 + B5-176.47058823529412 + C5-176.47058823529412,
176.47058823529412: E5-176.47058823529412 + B5-176.47058823529412 + A5-176.47058823529412 + C5-176.47058823529412 + C4-176.47058823529412,
176.47058823529412: E5-176.47058823529412 + B5-176.47058823529412 + F4/176.47058823529412,
176.47058823529412: E5-176.47058823529412 + F5-176.47058823529412 + G5-176.47058823529412 + A5-176.47058823529412 + B5-176.47058823529412`
const Koolmelody = tune`
162.16216216216216: B5~162.16216216216216 + A5~162.16216216216216 + B4-162.16216216216216 + A4-162.16216216216216 + D4^162.16216216216216,
162.16216216216216: G5~162.16216216216216 + G4-162.16216216216216 + C4~162.16216216216216 + C5~162.16216216216216,
162.16216216216216: G5~162.16216216216216 + F5~162.16216216216216 + F4-162.16216216216216 + D4~162.16216216216216 + C5~162.16216216216216,
162.16216216216216: F5~162.16216216216216 + E5~162.16216216216216 + D5~162.16216216216216 + C5~162.16216216216216 + F4-162.16216216216216,
162.16216216216216: C5~162.16216216216216 + F4-162.16216216216216 + E4~162.16216216216216 + D5~162.16216216216216,
162.16216216216216: C5~162.16216216216216 + B5^162.16216216216216 + F4-162.16216216216216 + E4~162.16216216216216 + E5~162.16216216216216,
162.16216216216216: C5~162.16216216216216 + B5^162.16216216216216 + E4~162.16216216216216 + F5~162.16216216216216,
162.16216216216216: B4~162.16216216216216 + A5^162.16216216216216 + D4-162.16216216216216 + F4~162.16216216216216 + F5~162.16216216216216,
162.16216216216216: B4~162.16216216216216 + G5~162.16216216216216 + D4-162.16216216216216 + G4~162.16216216216216,
162.16216216216216: B4~162.16216216216216 + G5^162.16216216216216 + D4-162.16216216216216 + G4~162.16216216216216 + A5~162.16216216216216,
162.16216216216216: A4~162.16216216216216 + F5^162.16216216216216 + D4-162.16216216216216 + G4~162.16216216216216,
162.16216216216216: A4~162.16216216216216 + G4~162.16216216216216 + F5^162.16216216216216 + D4-162.16216216216216 + B4~162.16216216216216,
162.16216216216216: G4~162.16216216216216 + F4~162.16216216216216 + E4~162.16216216216216 + E5^162.16216216216216 + B4~162.16216216216216,
162.16216216216216: E4~162.16216216216216 + E5^162.16216216216216 + C5~162.16216216216216 + D5~162.16216216216216,
162.16216216216216: E4~162.16216216216216 + D5~162.16216216216216 + B5-162.16216216216216,
162.16216216216216: E4~162.16216216216216 + D5^162.16216216216216 + C5^162.16216216216216 + B5-162.16216216216216 + E5~162.16216216216216,
162.16216216216216: E4~162.16216216216216 + B4^162.16216216216216 + A5-162.16216216216216 + E5~162.16216216216216 + C4~162.16216216216216,
162.16216216216216: D4~162.16216216216216 + B4^162.16216216216216 + G5-162.16216216216216 + F5~162.16216216216216,
162.16216216216216: D4~162.16216216216216 + A4^162.16216216216216 + F5~162.16216216216216 + E4~162.16216216216216,
162.16216216216216: D4~162.16216216216216 + C4~162.16216216216216 + G4^162.16216216216216 + F5-162.16216216216216 + E5-162.16216216216216,
162.16216216216216: C4~162.16216216216216 + G4^162.16216216216216 + E5-162.16216216216216 + D5-162.16216216216216 + F5~162.16216216216216,
162.16216216216216: F4^162.16216216216216 + D5-162.16216216216216 + B5/162.16216216216216 + F5~162.16216216216216 + G5~162.16216216216216,
162.16216216216216: E4^162.16216216216216 + C5-162.16216216216216 + B5/162.16216216216216 + G5~162.16216216216216 + G4~162.16216216216216,
162.16216216216216: D4^162.16216216216216 + B4-162.16216216216216 + A5/162.16216216216216 + G5~162.16216216216216 + G4~162.16216216216216,
162.16216216216216: D4^162.16216216216216 + C4^162.16216216216216 + B4-162.16216216216216 + A4-162.16216216216216 + A5/162.16216216216216,
162.16216216216216: G4-162.16216216216216 + G5/162.16216216216216 + A5~162.16216216216216 + A4~162.16216216216216,
162.16216216216216: G4-162.16216216216216 + F4-162.16216216216216 + G5/162.16216216216216 + A5~162.16216216216216 + B4~162.16216216216216,
162.16216216216216: E4-162.16216216216216 + D4-162.16216216216216 + F5/162.16216216216216 + A5~162.16216216216216 + C5~162.16216216216216,
162.16216216216216: C4-162.16216216216216 + E5/162.16216216216216 + C5/162.16216216216216 + D5/162.16216216216216 + A5~162.16216216216216,
162.16216216216216: C4-162.16216216216216 + D5/162.16216216216216 + F4/162.16216216216216 + G4/162.16216216216216 + A4/162.16216216216216,
162.16216216216216: C5/162.16216216216216 + F4/162.16216216216216 + A4/162.16216216216216 + G4/162.16216216216216 + E5~162.16216216216216,
162.16216216216216: B4/162.16216216216216 + A4/162.16216216216216 + G4/162.16216216216216 + F4/162.16216216216216 + E4/162.16216216216216`
// set the map displayed to the current level
const currentLevel = levels[level];
setMap(currentLevel);

setSolids([ player, box, wall ]); // other sprites cannot go inside of these sprites

// allow certain sprites to push certain other sprites
setPushables({
  [player]: [ box ],
  [box]: [ box ]
});
// Play it:
const playback = playTune(Koolmelody, Infinity)

 

// inputs for player movement control

onInput("s", () => {
  getFirst(player).y += 1; // positive y is downwards
  
});
onInput("w", () => {
  getFirst(player).y -= 1; // positive y is downwards
});
onInput("d", () => {
  getFirst(player).x += 1;
});
onInput("a", () => {
  getFirst(player).x -= 1;
});
// input to reset level
onInput("j", () => {
  const currentLevel = levels[level]; // get the original map of the level

  // make sure the level exists before we load it
  if (currentLevel !== undefined) {
    clearText("");
    setMap(currentLevel);
  }
});


// these get run after every input
afterInput(() =>{ 
// Or make it shut up early:
playback.end()
  console.log("here");

  // count the number of tiles with goals
  const targetNumber = tilesWith(goal).length;
  
  // count the number of tiles with goals and boxes
  const numberCovered = tilesWith(goal, box).length;

  // if the number of goals is the same as the number of goals covered
  // all goals are covered and we can go to the next level
  if (numberCovered === targetNumber) {
    // increase the current level number
    level = level + 1;

    const currentLevel = levels[level];

    // make sure the level exists and if so set the map
    // otherwise, we have finished the last level, there is no level
    // after the last level
    if (currentLevel !== undefined) {
      setMap(currentLevel);
    } else {
      addText("you win!", { y: 4, color: color`3` });
      
// Or make it shut up early:
playback.end()
    }
  }

});

