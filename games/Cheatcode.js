/*
@title: cheatcode
@description: ↑↑↓↓←→←→BA
@author: spheroidon
@tags: ['arcade']
@addedOn: 2025-08-24
*/

// define the sprites in our game
const up = "u";
const down = "d";
const left = "l";
const right = "r";
const buttonb = "b";
const buttona = "a";

const up2 = "1";
const down2 = "2";
const left2 = "3";
const right2 = "4";
const buttonb2 = "5";
const buttona2 = "6";

const bg = "g";

// assign bitmap art to each sprite
setLegend([up, bitmap`
1111111001111111
1111110110111111
1111101111011111
1111011111101111
1110111111110111
1110001111000111
1111101111011111
1111101111011111
1111101111011111
1111101111011111
1111101111011111
1111101111011111
1111101111011111
1111101111011111
1111101111011111
1111100000011111`],
  [down, bitmap`
1111100000011111
1111101111011111
1111101111011111
1111101111011111
1111101111011111
1111101111011111
1111101111011111
1111101111011111
1111101111011111
1111101111011111
1110001111000111
1110111111110111
1111011111101111
1111101111011111
1111110110111111
1111111001111111`],
  [left, bitmap`
1111111111111111
1111111111111111
1111111111111111
1111001111111111
1110101111111111
1101100000000000
1011111111111110
0111111111111110
0111111111111110
1011111111111110
1101100000000000
1110101111111111
1111001111111111
1111111111111111
1111111111111111
1111111111111111`],
  [right, bitmap`
1111111111111111
1111111111111111
1111111111111111
1111111111001111
1111111111010111
0000000000011011
0111111111111101
0111111111111110
0111111111111110
0111111111111101
0000000000011011
1111111111010111
1111111111001111
1111111111111111
1111111111111111
1111111111111111`],
  [buttonb, bitmap`
1111111111111111
1111111111111111
1100000000000011
1101111111111011
1101100000111011
1101101111011011
1101101111011011
1101100000111011
1101101111011011
1101101111011011
1101101111011011
1101100000111011
1101111111111011
1100000000000011
1111111111111111
1111111111111111`],
  [buttona, bitmap`
1111111111111111
1111111111111111
1100000000000011
1101111111111011
1101111001111011
1101110110111011
1101101111011011
1101101111011011
1101100000011011
1101101111011011
1101101111011011
1101101111011011
1101111111111011
1100000000000011
1111111111111111
1111111111111111`],
  [up2, bitmap`
1111111221111111
1111112112111111
1111121111211111
1111211111121111
1112111111112111
1112221111222111
1111121111211111
1111121111211111
1111121111211111
1111121111211111
1111121111211111
1111121111211111
1111121111211111
1111121111211111
1111121111211111
1111122222211111`],
  [down2, bitmap`
1111122222211111
1111121111211111
1111121111211111
1111121111211111
1111121111211111
1111121111211111
1111121111211111
1111121111211111
1111121111211111
1111121111211111
1112221111222111
1112111111112111
1111211111121111
1111121111211111
1111112112111111
1111111221111111`],
  [left2, bitmap`
1111111111111111
1111111111111111
1111111111111111
1111221111111111
1112121111111111
1121122222222222
1211111111111112
2111111111111112
2111111111111112
1211111111111112
1121122222222222
1112121111111111
1111221111111111
1111111111111111
1111111111111111
1111111111111111`],
  [right2, bitmap`
1111111111111111
1111111111111111
1111111111111111
1111111111221111
1111111111212111
2222222222211211
2111111111111121
2111111111111112
2111111111111112
2111111111111121
2222222222211211
1111111111212111
1111111111221111
1111111111111111
1111111111111111
1111111111111111`],
  [buttonb2, bitmap`
1111111111111111
1111111111111111
1122222222222211
1121111111111211
1121122222111211
1121121111211211
1121121111211211
1121122222111211
1121121111211211
1121121111211211
1121121111211211
1121122222111211
1121111111111211
1122222222222211
1111111111111111
1111111111111111`],
  [buttona2, bitmap`
1111111111111111
1111111111111111
1122222222222211
1121111111111211
1121111221111211
1121112112111211
1121121111211211
1121121111211211
1121122222211211
1121121111211211
1121121111211211
1121121111211211
1121111111111211
1122222222222211
1111111111111111
1111111111111111`],
  [bg, bitmap`
1L1L1L1L1L1L1L1L
L1L1L1L1L1L1L1L1
1111111111111111
1111111111111111
1111111111111111
1111111111111111
1111111111111111
1111111111111111
1111111111111111
1111111111111111
1111111111111111
1111111111111111
1111111111111111
1111111111111111
1L1L1L1L1L1L1L1L
L1L1L1L1L1L1L1L1`]);

setBackground("g")

const level = map`
...
urb
lda`;
const levelu = map`
...
1rb
lda`;
const leveld = map`
...
urb
l2a`;
const levell = map`
...
urb
3da`;
const levelr = map`
...
u4b
lda`;
const levelb = map`
...
ur5
lda`;
const levela = map`
...
urb
ld6`;

const successfulCheatcode = tune`
120: B4/120 + D4/120,
120: G4/120 + B4/120,
120: A4/120 + C5/120,
120: B4/120 + D5/120,
120: C5/120 + E5/120,
120: D5/120 + F5/120,
120: E5/120 + G5/120,
120: G5/120 + F5/120 + B5/120,
120: A5/120 + B5/120,
120: A5/120,
120: G5/120,
120: A5/120,
120: G5/120,
120: A5/120,
2160`;
const successfulKey = tune`
75: E5/75 + F5/75,
75: A5/75 + B5/75,
2250`;
const gameOver = tune`
483.8709677419355: C4/483.8709677419355 + F4/483.8709677419355,
483.8709677419355: D4/483.8709677419355,
483.8709677419355: D4/483.8709677419355,
483.8709677419355: D4/483.8709677419355,
483.8709677419355: D4/483.8709677419355,
483.8709677419355: C4/483.8709677419355 + F4~483.8709677419355,
483.8709677419355,
483.8709677419355: C4~483.8709677419355,
483.8709677419355: C4~483.8709677419355,
483.8709677419355: C4~483.8709677419355,
483.8709677419355,
483.8709677419355: C4~483.8709677419355,
9677.41935483871`;

const neededInput = "uuddlrlrba";
let currentInput, score, status, lost, canPress, playback;
let best = 0;

let cheatcodes = 0;
let timeLeft = 30;
let timer = null;

function initGameVars() {
  setMap(level);

  currentInput = "";

  score = 0;

  lost = false;
  canPress = true;

  clearText();
  
  timeLeft = 30;

  timer = setInterval(() => {
    timeLeft -= 1;
    if (timeLeft >= 0 && !lost) {
      status = "Score: " + score + "\nBest: " + best + "\nTime left: " + timeLeft;
      clearText();
      addText(status, { x: 3, y: 1, color: color`2` });
    } else {
      clearInterval(timer);
      gameover();
    }
  }, 1000);

}

initGameVars();

function onInputUniversal() {
  if (canPress == false) {
    return
  }
}

// inputs for player movement control
onInput("w", () => {
  onInputUniversal()
  currentInput += "u";
  setMap(levelu);
});

onInput("a", () => {
  onInputUniversal()
  currentInput += "l";
  setMap(levell);
});


onInput("s", () => {
  onInputUniversal()
  currentInput += "d";
  setMap(leveld);
});

onInput("d", () => {
  onInputUniversal()
  currentInput += "r";
  setMap(levelr);
});

onInput("k", () => {
  onInputUniversal()
  currentInput += "b";
  setMap(levelb);
});

onInput("l", () => {
  onInputUniversal()
  currentInput += "a";
  setMap(levela);
});

onInput("j", () => {
  onInputUniversal()
  currentInput += "b";
  setMap(levelb);
});

onInput("i", () => {
  onInputUniversal()
  currentInput += "a";
  setMap(levela);
});

function gameover() {
  lost = true;
  clearInterval(timer);
  status = "Game over!\nScore: " + score
  if (score > best) {
    best = score;
    status += "\n(New best!)";
  } else {
    status += "\nBest: " + best;
  }
  if (playback) {
    playback.end();
  }
  playback = playTune(gameOver);
  setTimeout(() => {
    initGameVars();
  }, 7000)
}

// these get run after every input
afterInput(() => {
  if (lost == false) {
    if (currentInput == neededInput) {
      currentInput = "";
      score += 10;
      cheatcodes += 1;
      timeLeft += Math.max(3,10-(cheatcodes%10));
      status = "Score: " + score + "\nBest: " + best + "\n(Cheatcode!)";
      if (playback) {
        playback.end();
      }
      playback = playTune(successfulCheatcode);
    } else if (neededInput.startsWith(currentInput)) {
      score += 1;
      if (playback) {
        playback.end();
      }
      playback = playTune(successfulKey);
    } else {
      gameover();
    }

    canPress = false;
  }
  setTimeout(() => {
    setMap(level);
    canPress = true;
  }, 100);
  clearText();
  addText(status, { x: 3, y: 1, color: color`2` });
});